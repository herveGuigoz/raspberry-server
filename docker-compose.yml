version: '3.4'

services:
  reverse-proxy:
    container_name: traefik
    restart: always
    image: traefik:v2.0
    ports:
    - "80:80"
    - "443:443"
    command:
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --providers.docker
      - --api
      - --certificatesresolvers.leresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory
      - --certificatesresolvers.leresolver.acme.email=herve.guigoz@gmail.com
      - --certificatesresolvers.leresolver.acme.storage=/acme.json
      - --certificatesresolvers.leresolver.acme.tlschallenge=true
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./srv/acme.json:/acme.json"
    labels:
      # Dashboard
      - "traefik.http.routers.traefik.rule=Host(`traefik.${DOMAIN_NAME}`)"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.tls.certresolver=leresolver"
      - "traefik.http.routers.traefik.entrypoints=websecure"
      - "traefik.http.routers.traefik.middlewares=authtraefik"
      - "traefik.http.middlewares.authtraefik.basicauth.users=herveGuigoz:$$apr1$$fuBZRZVd$$r3oM30CUtfZnOI8qutwNy1" # user/password
      
      # global redirect to https
      - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"

      # middleware redirect
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"

  firefly:
    image: jc5x/firefly-iii:latest
    container_name: firefly
    restart: always
    volumes:
      - ./firefly/export:/var/www/firefly-iii/storage/export
      - ./firefly/upload:/var/www/firefly-iii/storage/upload
    environment:
      - DB_CONNECTION=pgsql
      - DB_HOST=fireflydb
      - DB_PORT=5432
      - DB_DATABASE=firefly
      - DB_USERNAME=firefly
      - DB_PASSWORD=${DATABASE_PASS}
      - APP_KEY=53523532226759353573433596537234
      - TRUSTED_PROXIES=**
    links: 
      - fireflydb
    depends_on: 
      - fireflydb
    networks:
      - default
    expose:
      - "80"
    labels:
      - "traefik.http.routers.firefly.rule=Host(`firefly.${DOMAIN_NAME}`)"
      - "traefik.http.routers.firefly.entrypoints=websecure"
      - "traefik.http.routers.firefly.tls=true"
      - "traefik.http.routers.firefly.tls.certresolver=leresolver"

  fireflydb:
    image: postgres:12-alpine
    container_name: fireflydb
    restart: always
    expose:
      - "5432"
    environment:
      - POSTGRES_USER=firefly
      - POSTGRES_PASSWORD=${DATABASE_PASS}
    volumes:
      - firefly_db:/var/lib/postgresql/data
    networks: 
      - default
    labels: 
      - traefik.enable=false

networks:
  #the network where firefly can communicate to the database
  default:
    external: false

volumes:
  firefly_db: