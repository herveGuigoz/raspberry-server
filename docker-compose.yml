version: '3'

networks:
  default:
    external: false
#  web:
#    external:
#      name: web

services:
  traefik:
    container_name: traefik
    image: traefik:chevrotin
    restart: unless-stopped
    ports:
      - 53:53/udp
      - 80:80
      - 443:443
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - "./conf/acme.json:/acme.json"
    command:
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --entrypoints.dns.address=:53
      - --entrypoints.udpdns.address=:53/udp
      - --providers.docker
      - --api
      - --certificatesresolvers.leresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory
      - --certificatesresolvers.leresolver.acme.email=herve.guigoz@gmail.com
      - --certificatesresolvers.leresolver.acme.storage=/conf/acme.json
      - --certificatesresolvers.leresolver.acme.tlschallenge=true
    labels:
      # Dashboard
      traefik.http.routers.traefik.rule: Host(`traefik.${DOMAIN_NAME}`)
      traefik.http.routers.traefik.service: api@internal
      traefik.http.routers.traefik.tls.certresolver: leresolver
      traefik.http.routers.traefik.middlewares: authtraefik
      # Auth middleware
      traefik.http.middlewares.authtraefik.basicauth.users: ${AUTH_TRAEFIK}
      # Redirect middleware
      traefik.http.middlewares.redirect.redirectscheme.scheme: https
      # Pihole middleware
      traefik.http.middlewares.pihole.addprefix.prefix: /admin

  pihole:
    container_name: pihole
    restart: unless-stopped
    image: pihole/pihole:v4.4
    environment:
      TZ: 'Europe/Paris'
      VIRTUAL_HOST: pihole.localhost
      WEBPASSWORD: ${PIHOLE_PASSWORD} #'admin'
    volumes:
      - datapihole:/etc/pihole/
      - datadnsmasqd:/etc/dnsmasq.d/
    cap_add:
      - NET_ADMIN
    dns:
      - 127.0.0.1
      - 1.1.1.1
    labels:
      traefik.enable: true
      # http router
      traefik.http.routers.pihole-http.rule: Host(`pihole.${DOMAIN_NAME}`)
      traefik.http.routers.pihole-http.entrypoints: web
      traefik.http.routers.pihole-http.middlewares: redirect
      traefik.http.services.pihole.loadbalancer.server.port: 80
      # https router
      traefik.http.routers.pihole-https.rule: Host(`pihole.${DOMAIN_NAME}`)
      traefik.http.routers.pihole-https.entrypoints: websecure
      traefik.http.routers.pihole-https.tls: true
      traefik.http.routers.pihole-https.tls.certresolver: leresolver
      traefik.http.routers.pihole-https.middlewares: pihole@docker
      # tcp router
      traefik.tcp.routers.pihole-dns.entrypoints: dns
      traefik.tcp.routers.pihole-dns.service: pihole
      # udp router
      traefik.udp.routers.pihole-udp.entrypoints: udpdns
      traefik.udp.routers.pihole-udp.service: pihole
      traefik.udp.services.pihole.loadbalancer.server.port: 53


  firefly:
    image: jc5x/firefly-iii:latest
    container_name: firefly
    restart: always
    volumes:
      - ./firefly/export:/var/www/firefly-iii/storage/export
      - ./firefly/upload:/var/www/firefly-iii/storage/upload
    environment:
      - DB_CONNECTION=pgsql
      - DB_HOST=fireflydb
      - DB_PORT=5432
      - DB_DATABASE=${DATABASE_NAME}
      - DB_USERNAME=${DATABASE_USER}
      - DB_PASSWORD=${DATABASE_PASSWORD}
      - APP_KEY=${APP_KEY}
      - TRUSTED_PROXIES=**
    links: 
      - fireflydb
    depends_on: 
      - fireflydb
    networks:
      - default
    expose:
      - "80"
    labels:
      traefik.enable: true
      # http router
      traefik.http.routers.firefly-http.rule: Host(`firefly.${DOMAIN_NAME}`)
      traefik.http.routers.firefly-http.entrypoints: web
      traefik.http.routers.firefly-http.middlewares: redirect
      # https router
      traefik.http.routers.firefly-https.rule: Host(`firefly.${DOMAIN_NAME}`)
      traefik.http.routers.firefly-https.entrypoints: websecure
      traefik.http.routers.firefly-https.tls: true
      traefik.http.routers.firefly-https.tls.certresolver: leresolver

  fireflydb:
    image: postgres:12-alpine
    container_name: fireflydb
    restart: always
    expose:
      - "5432"
    environment:
      - POSTGRES_USER=${DATABASE_USER}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
    volumes:
      - firefly_db:/var/lib/postgresql/data
    networks: 
      - default
    labels: 
      traefik.enable: false

volumes:
  # pihole volumes
  datapihole:
  datadnsmasqd:
  # firefly
  firefly_db: